//
//  LoginInteractor.swift
//  Arquiteturas
//
//  Created by Frédéric Helfer on 31/01/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginBusinessLogic
{
    func doSomething(request: Login.Something.Request)
}

protocol LoginDataStore
{
    //var name: String { get set }
}

class LoginInteractor: LoginBusinessLogic, LoginDataStore
{
    var presenter: LoginPresentationLogic?
    var worker: LoginWorker?
    //var name: String = ""
    
    // MARK: Do something
    
    func doSomething(request: Login.Something.Request)
    {
        worker = LoginWorker()
        worker?.loginUser(userMode: request.userModel, successHandler: { [weak self] userModel in
            if let self {
                let response = Login.Something.Response(userModel: userModel ?? UserModel())
                self.presenter?.presentSomething(response: response)
            }
        }, failureHandler: { [weak self] error in
            if let self,
               let error = error {
                let viewError = Login.Something.ViewError(error: error)
                self.presenter?.presentError(error: viewError)
            }
            
        })
    }
}
